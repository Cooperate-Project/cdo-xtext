/*
* generated by Xtext
*/
grammar InternalGraphix;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package net.winklerweb.cdoxtext.example.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package net.winklerweb.cdoxtext.example.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import net.winklerweb.cdoxtext.example.services.GraphixGrammarAccess;

}

@parser::members {
 
 	private GraphixGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(GraphixGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleGraphixCanvas
entryRuleGraphixCanvas 
:
{ before(grammarAccess.getGraphixCanvasRule()); }
	 ruleGraphixCanvas
{ after(grammarAccess.getGraphixCanvasRule()); } 
	 EOF 
;

// Rule GraphixCanvas
ruleGraphixCanvas
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGraphixCanvasAccess().getGroup()); }
(rule__GraphixCanvas__Group__0)
{ after(grammarAccess.getGraphixCanvasAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGraphixElement
entryRuleGraphixElement 
:
{ before(grammarAccess.getGraphixElementRule()); }
	 ruleGraphixElement
{ after(grammarAccess.getGraphixElementRule()); } 
	 EOF 
;

// Rule GraphixElement
ruleGraphixElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGraphixElementAccess().getAlternatives()); }
(rule__GraphixElement__Alternatives)
{ after(grammarAccess.getGraphixElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePoint
entryRulePoint 
:
{ before(grammarAccess.getPointRule()); }
	 rulePoint
{ after(grammarAccess.getPointRule()); } 
	 EOF 
;

// Rule Point
rulePoint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPointAccess().getGroup()); }
(rule__Point__Group__0)
{ after(grammarAccess.getPointAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCircle
entryRuleCircle 
:
{ before(grammarAccess.getCircleRule()); }
	 ruleCircle
{ after(grammarAccess.getCircleRule()); } 
	 EOF 
;

// Rule Circle
ruleCircle
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCircleAccess().getGroup()); }
(rule__Circle__Group__0)
{ after(grammarAccess.getCircleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColor
entryRuleColor 
:
{ before(grammarAccess.getColorRule()); }
	 ruleColor
{ after(grammarAccess.getColorRule()); } 
	 EOF 
;

// Rule Color
ruleColor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getColorAccess().getGroup()); }
(rule__Color__Group__0)
{ after(grammarAccess.getColorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEDouble
entryRuleEDouble 
:
{ before(grammarAccess.getEDoubleRule()); }
	 ruleEDouble
{ after(grammarAccess.getEDoubleRule()); } 
	 EOF 
;

// Rule EDouble
ruleEDouble
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEDoubleAccess().getGroup()); }
(rule__EDouble__Group__0)
{ after(grammarAccess.getEDoubleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__GraphixElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphixElementAccess().getCircleParserRuleCall_0()); }
	ruleCircle
{ after(grammarAccess.getGraphixElementAccess().getCircleParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGraphixElementAccess().getColorParserRuleCall_1()); }
	ruleColor
{ after(grammarAccess.getGraphixElementAccess().getColorParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getGroup_5_0()); }
(rule__Circle__Group_5_0__0)
{ after(grammarAccess.getCircleAccess().getGroup_5_0()); }
)

    |(
{ before(grammarAccess.getCircleAccess().getGroup_5_1()); }
(rule__Circle__Group_5_1__0)
{ after(grammarAccess.getCircleAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Alternatives_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getEKeyword_4_0_0()); }

	'E' 

{ after(grammarAccess.getEDoubleAccess().getEKeyword_4_0_0()); }
)

    |(
{ before(grammarAccess.getEDoubleAccess().getEKeyword_4_0_1()); }

	'e' 

{ after(grammarAccess.getEDoubleAccess().getEKeyword_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__GraphixCanvas__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GraphixCanvas__Group__0__Impl
	rule__GraphixCanvas__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphixCanvas__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphixCanvasAccess().getCanvasKeyword_0()); }

	'Canvas' 

{ after(grammarAccess.getGraphixCanvasAccess().getCanvasKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GraphixCanvas__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GraphixCanvas__Group__1__Impl
	rule__GraphixCanvas__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphixCanvas__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphixCanvasAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getGraphixCanvasAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GraphixCanvas__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GraphixCanvas__Group__2__Impl
	rule__GraphixCanvas__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphixCanvas__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphixCanvasAccess().getLowerLeftBoundsAssignment_2()); }
(rule__GraphixCanvas__LowerLeftBoundsAssignment_2)
{ after(grammarAccess.getGraphixCanvasAccess().getLowerLeftBoundsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GraphixCanvas__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GraphixCanvas__Group__3__Impl
	rule__GraphixCanvas__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphixCanvas__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphixCanvasAccess().getFullStopFullStopKeyword_3()); }

	'..' 

{ after(grammarAccess.getGraphixCanvasAccess().getFullStopFullStopKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GraphixCanvas__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GraphixCanvas__Group__4__Impl
	rule__GraphixCanvas__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphixCanvas__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphixCanvasAccess().getUpperRightBoundsAssignment_4()); }
(rule__GraphixCanvas__UpperRightBoundsAssignment_4)
{ after(grammarAccess.getGraphixCanvasAccess().getUpperRightBoundsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GraphixCanvas__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GraphixCanvas__Group__5__Impl
	rule__GraphixCanvas__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphixCanvas__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphixCanvasAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getGraphixCanvasAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GraphixCanvas__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GraphixCanvas__Group__6__Impl
	rule__GraphixCanvas__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphixCanvas__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphixCanvasAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getGraphixCanvasAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GraphixCanvas__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GraphixCanvas__Group__7__Impl
	rule__GraphixCanvas__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphixCanvas__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphixCanvasAccess().getGroup_7()); }
(rule__GraphixCanvas__Group_7__0)?
{ after(grammarAccess.getGraphixCanvasAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GraphixCanvas__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GraphixCanvas__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphixCanvas__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphixCanvasAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getGraphixCanvasAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__GraphixCanvas__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GraphixCanvas__Group_7__0__Impl
	rule__GraphixCanvas__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphixCanvas__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphixCanvasAccess().getContentAssignment_7_0()); }
(rule__GraphixCanvas__ContentAssignment_7_0)
{ after(grammarAccess.getGraphixCanvasAccess().getContentAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GraphixCanvas__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GraphixCanvas__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphixCanvas__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphixCanvasAccess().getGroup_7_1()); }
(rule__GraphixCanvas__Group_7_1__0)*
{ after(grammarAccess.getGraphixCanvasAccess().getGroup_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GraphixCanvas__Group_7_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GraphixCanvas__Group_7_1__0__Impl
	rule__GraphixCanvas__Group_7_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphixCanvas__Group_7_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphixCanvasAccess().getSemicolonKeyword_7_1_0()); }

	';' 

{ after(grammarAccess.getGraphixCanvasAccess().getSemicolonKeyword_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GraphixCanvas__Group_7_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GraphixCanvas__Group_7_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphixCanvas__Group_7_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphixCanvasAccess().getContentAssignment_7_1_1()); }
(rule__GraphixCanvas__ContentAssignment_7_1_1)
{ after(grammarAccess.getGraphixCanvasAccess().getContentAssignment_7_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Point__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__Group__0__Impl
	rule__Point__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getPointAction_0()); }
(

)
{ after(grammarAccess.getPointAccess().getPointAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__Group__1__Impl
	rule__Point__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getLeftParenthesisKeyword_1()); }
(
	'(' 
)?
{ after(grammarAccess.getPointAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__Group__2__Impl
	rule__Point__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getXAssignment_2()); }
(rule__Point__XAssignment_2)
{ after(grammarAccess.getPointAccess().getXAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__Group__3__Impl
	rule__Point__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getVerticalLineKeyword_3()); }

	'|' 

{ after(grammarAccess.getPointAccess().getVerticalLineKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__Group__4__Impl
	rule__Point__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getYAssignment_4()); }
(rule__Point__YAssignment_4)
{ after(grammarAccess.getPointAccess().getYAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getRightParenthesisKeyword_5()); }
(
	')' 
)?
{ after(grammarAccess.getPointAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Circle__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group__0__Impl
	rule__Circle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getCircleKeyword_0()); }

	'Circle' 

{ after(grammarAccess.getCircleAccess().getCircleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Circle__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group__1__Impl
	rule__Circle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getAtKeyword_1()); }

	'at' 

{ after(grammarAccess.getCircleAccess().getAtKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Circle__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group__2__Impl
	rule__Circle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getCenterAssignment_2()); }
(rule__Circle__CenterAssignment_2)
{ after(grammarAccess.getCircleAccess().getCenterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Circle__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group__3__Impl
	rule__Circle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getRadiusKeyword_3()); }

	'radius' 

{ after(grammarAccess.getCircleAccess().getRadiusKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Circle__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group__4__Impl
	rule__Circle__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getRadiusAssignment_4()); }
(rule__Circle__RadiusAssignment_4)
{ after(grammarAccess.getCircleAccess().getRadiusAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Circle__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getAlternatives_5()); }
(rule__Circle__Alternatives_5)*
{ after(grammarAccess.getCircleAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Circle__Group_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group_5_0__0__Impl
	rule__Circle__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getLineKeyword_5_0_0()); }

	'line' 

{ after(grammarAccess.getCircleAccess().getLineKeyword_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Circle__Group_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group_5_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getLineColorAssignment_5_0_1()); }
(rule__Circle__LineColorAssignment_5_0_1)
{ after(grammarAccess.getCircleAccess().getLineColorAssignment_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Circle__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group_5_1__0__Impl
	rule__Circle__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getFillKeyword_5_1_0()); }

	'fill' 

{ after(grammarAccess.getCircleAccess().getFillKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Circle__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getFillColorAssignment_5_1_1()); }
(rule__Circle__FillColorAssignment_5_1_1)
{ after(grammarAccess.getCircleAccess().getFillColorAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Color__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group__0__Impl
	rule__Color__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getColorAction_0()); }
(

)
{ after(grammarAccess.getColorAccess().getColorAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group__1__Impl
	rule__Color__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getColorKeyword_1()); }

	'Color' 

{ after(grammarAccess.getColorAccess().getColorKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group__2__Impl
	rule__Color__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getNameAssignment_2()); }
(rule__Color__NameAssignment_2)
{ after(grammarAccess.getColorAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getGroup_3()); }
(rule__Color__Group_3__0)
{ after(grammarAccess.getColorAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Color__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group_3__0__Impl
	rule__Color__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getColorAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group_3__1__Impl
	rule__Color__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getRedAssignment_3_1()); }
(rule__Color__RedAssignment_3_1)
{ after(grammarAccess.getColorAccess().getRedAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group_3__2__Impl
	rule__Color__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getCommaKeyword_3_2()); }

	',' 

{ after(grammarAccess.getColorAccess().getCommaKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group_3__3__Impl
	rule__Color__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getGreenAssignment_3_3()); }
(rule__Color__GreenAssignment_3_3)
{ after(grammarAccess.getColorAccess().getGreenAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group_3__4__Impl
	rule__Color__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getCommaKeyword_3_4()); }

	',' 

{ after(grammarAccess.getColorAccess().getCommaKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group_3__5__Impl
	rule__Color__Group_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getBlueAssignment_3_5()); }
(rule__Color__BlueAssignment_3_5)
{ after(grammarAccess.getColorAccess().getBlueAssignment_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group_3__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group_3__6__Impl
	rule__Color__Group_3__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_3__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getGroup_3_6()); }
(rule__Color__Group_3_6__0)?
{ after(grammarAccess.getColorAccess().getGroup_3_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group_3__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group_3__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_3__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getRightParenthesisKeyword_3_7()); }

	')' 

{ after(grammarAccess.getColorAccess().getRightParenthesisKeyword_3_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Color__Group_3_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group_3_6__0__Impl
	rule__Color__Group_3_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_3_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getCommaKeyword_3_6_0()); }

	',' 

{ after(grammarAccess.getColorAccess().getCommaKeyword_3_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group_3_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group_3_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_3_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getAlphaAssignment_3_6_1()); }
(rule__Color__AlphaAssignment_3_6_1)
{ after(grammarAccess.getColorAccess().getAlphaAssignment_3_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EDouble__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group__0__Impl
	rule__EDouble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group__1__Impl
	rule__EDouble__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1()); }
(	RULE_INT)?
{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group__2__Impl
	rule__EDouble__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getFullStopKeyword_2()); }

	'.' 

{ after(grammarAccess.getEDoubleAccess().getFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group__3__Impl
	rule__EDouble__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getGroup_4()); }
(rule__EDouble__Group_4__0)?
{ after(grammarAccess.getEDoubleAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EDouble__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group_4__0__Impl
	rule__EDouble__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getAlternatives_4_0()); }
(rule__EDouble__Alternatives_4_0)
{ after(grammarAccess.getEDoubleAccess().getAlternatives_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group_4__1__Impl
	rule__EDouble__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1()); }
(
	'-' 
)?
{ after(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2()); }
	RULE_INT
{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__GraphixCanvas__LowerLeftBoundsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphixCanvasAccess().getLowerLeftBoundsPointParserRuleCall_2_0()); }
	rulePoint{ after(grammarAccess.getGraphixCanvasAccess().getLowerLeftBoundsPointParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GraphixCanvas__UpperRightBoundsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphixCanvasAccess().getUpperRightBoundsPointParserRuleCall_4_0()); }
	rulePoint{ after(grammarAccess.getGraphixCanvasAccess().getUpperRightBoundsPointParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GraphixCanvas__ContentAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphixCanvasAccess().getContentGraphixElementParserRuleCall_7_0_0()); }
	ruleGraphixElement{ after(grammarAccess.getGraphixCanvasAccess().getContentGraphixElementParserRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GraphixCanvas__ContentAssignment_7_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphixCanvasAccess().getContentGraphixElementParserRuleCall_7_1_1_0()); }
	ruleGraphixElement{ after(grammarAccess.getGraphixCanvasAccess().getContentGraphixElementParserRuleCall_7_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Point__XAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getXEDoubleParserRuleCall_2_0()); }
	ruleEDouble{ after(grammarAccess.getPointAccess().getXEDoubleParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Point__YAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getYEDoubleParserRuleCall_4_0()); }
	ruleEDouble{ after(grammarAccess.getPointAccess().getYEDoubleParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__CenterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getCenterPointParserRuleCall_2_0()); }
	rulePoint{ after(grammarAccess.getCircleAccess().getCenterPointParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__RadiusAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getRadiusEDoubleParserRuleCall_4_0()); }
	ruleEDouble{ after(grammarAccess.getCircleAccess().getRadiusEDoubleParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__LineColorAssignment_5_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getLineColorColorCrossReference_5_0_1_0()); }
(
{ before(grammarAccess.getCircleAccess().getLineColorColorEStringParserRuleCall_5_0_1_0_1()); }
	ruleEString{ after(grammarAccess.getCircleAccess().getLineColorColorEStringParserRuleCall_5_0_1_0_1()); }
)
{ after(grammarAccess.getCircleAccess().getLineColorColorCrossReference_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__FillColorAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getFillColorColorCrossReference_5_1_1_0()); }
(
{ before(grammarAccess.getCircleAccess().getFillColorColorEStringParserRuleCall_5_1_1_0_1()); }
	ruleEString{ after(grammarAccess.getCircleAccess().getFillColorColorEStringParserRuleCall_5_1_1_0_1()); }
)
{ after(grammarAccess.getCircleAccess().getFillColorColorCrossReference_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Color__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getColorAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Color__RedAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getRedEDoubleParserRuleCall_3_1_0()); }
	ruleEDouble{ after(grammarAccess.getColorAccess().getRedEDoubleParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Color__GreenAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getGreenEDoubleParserRuleCall_3_3_0()); }
	ruleEDouble{ after(grammarAccess.getColorAccess().getGreenEDoubleParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Color__BlueAssignment_3_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getBlueEDoubleParserRuleCall_3_5_0()); }
	ruleEDouble{ after(grammarAccess.getColorAccess().getBlueEDoubleParserRuleCall_3_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Color__AlphaAssignment_3_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getAlphaEDoubleParserRuleCall_3_6_1_0()); }
	ruleEDouble{ after(grammarAccess.getColorAccess().getAlphaEDoubleParserRuleCall_3_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


